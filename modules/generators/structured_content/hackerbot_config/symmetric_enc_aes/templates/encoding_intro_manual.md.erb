Encoding
===================

As we covered in the Introduction to Cryptography lab, there is a distinction between encoding and encrypting data.

Whilst both encoding and encryption involve converting the format to another, encoding typically has the property of reversibility and, whilst from the human readability perspective the data may look obfuscated, the process is reversible. Encoding does not aim to securely to apply confidentiality the data being processed.

Common applications of encoding are:
- Interpreting binary data to printable characters (ASCII, Unicode, Braille, etc.)
- Converting arbitrary data into an ASCII printable format for transferring between systems (base64)
- Extending the usability of a legacy protocol whilst staying within the legal character set (URL percentage encoding for special characters)


#### Manual Character Encoding

Given the following string of bytes in binary representation, we can manually encode the binary into ASCII.

`01011001 01101111 01110010 01101011 01110011 01101000 01101001 01110010 01100101 00100001`

![ASCII table](https://cloud.githubusercontent.com/assets/670192/17168883/b18ff362-53dc-11e6-8288-fa49a5f3459e.png)
Source: https://web.alfredstate.edu/faculty/weimandn/miscellaneous/ascii/ascii_index.html

| Decimal (ordinal)   | Binary   | Octal   | Hex   |  ASCII  |
| :-----------------: | :------: | :-----: | :---: | :-----: |
|         89          |	01011001 |  131    |   59  |    Y    |
|        111          | 01101111 |	157    | 6F    |    o    |


==Logbook task: Encode the rest of the string manually in both ASCII and Hexadecimal in your logbook.==
> (e.g. ASCII: "Yo....", Hex: "59 6F ...").


#### Character encoding with tools

As you can see, the manual route takes a while. Particularly for larger strings of data. Luckily automated tools exist to assist!

==Logbook task: Decode the following binary and into ascii representation using a web tool converter (such as [CyberChef](https://gchq.github.io/CyberChef/)) Take a screenshot of your solution in your browser as evidence in your logbook.==

```

```

Web applications such as the one linked above are helpful for one-off, such as lab tasks or capture-the-flag competitions, but it would be far more useful if we could use this functionality for general purpose problems in our own scripts and applications.