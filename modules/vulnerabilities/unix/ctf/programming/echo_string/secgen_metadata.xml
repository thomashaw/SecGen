<?xml version="1.0"?>

<vulnerability xmlns="http://www.github/cliffe/SecGen/vulnerability"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="http://www.github/cliffe/SecGen/vulnerability">
  <name>Echo String Challenge</name>
  <author>Thomas Shaw</author>
  <module_license>MIT</module_license>
  <description>Programming challenge which involves echoing a random string back.</description>

  <type>ctf_challenge</type>
  <privilege>none</privilege>
  <access>local</access>
  <platform>linux</platform>

  <challenge_type>misc</challenge_type>
  <challenge_subtype>programming</challenge_subtype>
  <difficulty>low</difficulty>

  <!-- script dropped in account's home directory by default with setuid configuration. -->
  <read_fact>challenge_name</read_fact>
  <read_fact>script_data</read_fact>
  <read_fact>account</read_fact>
  <read_fact>flag</read_fact>
  <read_fact>group</read_fact>
  <!-- storage_directory: Blank by default. If supplied, store the files here. e.g. NFS or SMB storage location -->
  <read_fact>storage_directory</read_fact>
  <!--  port: Blank by default. If supplied install script challenge as xinetd program running on given port
  TODO: investigate why this doesnt work with nc -->
  <!--<read_fact>port</read_fact>-->

  <default_input into="challenge_name">
    <value>echo_string</value>
  </default_input>
  <default_input into="script_data">
    <generator module_path=".*echo_string.*"/>
  </default_input>
  <default_input into="account">
    <generator type="account">
      <input into="username">
        <value>challenges</value>
      </input>
      <input into="password">
        <value>password</value>
      </input>
    </generator>
  </default_input>
  <default_input into="group">
    <value>echo_string</value>
  </default_input>
  <default_input into="flag">
    <generator type="flag_generator"/>
  </default_input>

  <requires>
    <module_path>utilities/unix/system/accounts</module_path>
  </requires>

  <requires>
    <module_path>utilities/unix/system/binary_script_container</module_path>
  </requires>

  <requires>
    <module_path>utilities/unix/languages/ruby</module_path>
  </requires>

  <requires>
    <module_path>utilities/unix/system/xinetd</module_path>
  </requires>

</vulnerability>
