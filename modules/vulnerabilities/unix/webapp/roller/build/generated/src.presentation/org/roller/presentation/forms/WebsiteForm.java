package org.roller.presentation.forms;

import org.roller.RollerException;
import java.util.Locale;

/**
 * Generated by XDoclet/ejbdoclet/strutsform. This class can be further processed with XDoclet/webdoclet/strutsconfigxml.
 *
 * @struts.form name="websiteForm"
 */
public class WebsiteForm
    extends    org.apache.struts.action.ActionForm
    implements java.io.Serializable
{
    protected java.lang.String id;
    protected java.lang.String name;
    protected java.lang.String description;
    protected org.roller.pojos.UserData user;
    protected java.lang.String defaultPageId;
    protected java.lang.String weblogDayPageId;
    protected java.lang.Boolean enableBloggerApi;
    protected org.roller.pojos.WeblogCategoryData bloggerCategory;
    protected org.roller.pojos.WeblogCategoryData defaultCategory;
    protected java.lang.String editorPage;
    protected java.lang.String ignoreWords;
    protected java.lang.Boolean allowComments;
    protected java.lang.Boolean emailComments;
    protected java.lang.String emailFromAddress;
    protected java.lang.String editorTheme;
    protected java.lang.String locale;
    protected java.lang.String timezone;
    protected java.lang.String defaultPlugins;
    protected java.lang.Boolean isEnabled;
    protected java.util.Locale localeInstance;
    protected java.util.TimeZone timeZoneInstance;

    /** Default empty constructor. */
    public WebsiteForm() {}

    /** Constructor that takes the data object as argument. */
    public WebsiteForm(org.roller.pojos.WebsiteData dataHolder, java.util.Locale locale) throws RollerException
    {
       copyFrom(dataHolder, locale);
    }

    public java.lang.String getId()
    {
        return this.id;
    }

   /** 
    */
    public void setId( java.lang.String id )
    {
        this.id = id;
    }

    public java.lang.String getName()
    {
        return this.name;
    }

   /** 
    */
    public void setName( java.lang.String name )
    {
        this.name = name;
    }

    public java.lang.String getDescription()
    {
        return this.description;
    }

   /** 
    */
    public void setDescription( java.lang.String description )
    {
        this.description = description;
    }

    public org.roller.pojos.UserData getUser()
    {
        return this.user;
    }

   /** 
    */
    public void setUser( org.roller.pojos.UserData user )
    {
        this.user = user;
    }

    public java.lang.String getDefaultPageId()
    {
        return this.defaultPageId;
    }

   /** 
    */
    public void setDefaultPageId( java.lang.String defaultPageId )
    {
        this.defaultPageId = defaultPageId;
    }

    public java.lang.String getWeblogDayPageId()
    {
        return this.weblogDayPageId;
    }

   /** 
    */
    public void setWeblogDayPageId( java.lang.String weblogDayPageId )
    {
        this.weblogDayPageId = weblogDayPageId;
    }

    public java.lang.Boolean getEnableBloggerApi()
    {
        return this.enableBloggerApi;
    }

   /** 
    */
    public void setEnableBloggerApi( java.lang.Boolean enableBloggerApi )
    {
        this.enableBloggerApi = enableBloggerApi;
    }

    public org.roller.pojos.WeblogCategoryData getBloggerCategory()
    {
        return this.bloggerCategory;
    }

   /** 
    */
    public void setBloggerCategory( org.roller.pojos.WeblogCategoryData bloggerCategory )
    {
        this.bloggerCategory = bloggerCategory;
    }

    public org.roller.pojos.WeblogCategoryData getDefaultCategory()
    {
        return this.defaultCategory;
    }

   /** 
    */
    public void setDefaultCategory( org.roller.pojos.WeblogCategoryData defaultCategory )
    {
        this.defaultCategory = defaultCategory;
    }

    public java.lang.String getEditorPage()
    {
        return this.editorPage;
    }

   /** 
    */
    public void setEditorPage( java.lang.String editorPage )
    {
        this.editorPage = editorPage;
    }

    public java.lang.String getIgnoreWords()
    {
        return this.ignoreWords;
    }

   /** 
    */
    public void setIgnoreWords( java.lang.String ignoreWords )
    {
        this.ignoreWords = ignoreWords;
    }

    public java.lang.Boolean getAllowComments()
    {
        return this.allowComments;
    }

   /** 
    */
    public void setAllowComments( java.lang.Boolean allowComments )
    {
        this.allowComments = allowComments;
    }

    public java.lang.Boolean getEmailComments()
    {
        return this.emailComments;
    }

   /** 
    */
    public void setEmailComments( java.lang.Boolean emailComments )
    {
        this.emailComments = emailComments;
    }

    public java.lang.String getEmailFromAddress()
    {
        return this.emailFromAddress;
    }

   /** 
    */
    public void setEmailFromAddress( java.lang.String emailFromAddress )
    {
        this.emailFromAddress = emailFromAddress;
    }

    public java.lang.String getEditorTheme()
    {
        return this.editorTheme;
    }

   /** 
    */
    public void setEditorTheme( java.lang.String editorTheme )
    {
        this.editorTheme = editorTheme;
    }

    public java.lang.String getLocale()
    {
        return this.locale;
    }

   /** 
    */
    public void setLocale( java.lang.String locale )
    {
        this.locale = locale;
    }

    public java.lang.String getTimezone()
    {
        return this.timezone;
    }

   /** 
    */
    public void setTimezone( java.lang.String timezone )
    {
        this.timezone = timezone;
    }

    public java.lang.String getDefaultPlugins()
    {
        return this.defaultPlugins;
    }

   /** 
    */
    public void setDefaultPlugins( java.lang.String defaultPlugins )
    {
        this.defaultPlugins = defaultPlugins;
    }

    public java.lang.Boolean getIsEnabled()
    {
        return this.isEnabled;
    }

   /** 
    */
    public void setIsEnabled( java.lang.Boolean isEnabled )
    {
        this.isEnabled = isEnabled;
    }

    public java.util.Locale getLocaleInstance()
    {
        return this.localeInstance;
    }

   /** 
    */
    public void setLocaleInstance( java.util.Locale localeInstance )
    {
        this.localeInstance = localeInstance;
    }

    public java.util.TimeZone getTimeZoneInstance()
    {
        return this.timeZoneInstance;
    }

   /** 
    */
    public void setTimeZoneInstance( java.util.TimeZone timeZoneInstance )
    {
        this.timeZoneInstance = timeZoneInstance;
    }

    /**
     * Copy values from this form bean to the specified data object.
     * Only copies primitive types (Boolean, boolean, String, Integer, int, Timestamp, Date)
     */
    public void copyTo(org.roller.pojos.WebsiteData dataHolder, Locale locale) throws RollerException
    {

        dataHolder.setId(this.id);

        dataHolder.setName(this.name);

        dataHolder.setDescription(this.description);

        dataHolder.setDefaultPageId(this.defaultPageId);

        dataHolder.setWeblogDayPageId(this.weblogDayPageId);

        dataHolder.setEnableBloggerApi(this.enableBloggerApi);

        dataHolder.setEditorPage(this.editorPage);

        dataHolder.setIgnoreWords(this.ignoreWords);

        dataHolder.setAllowComments(this.allowComments);

        dataHolder.setEmailComments(this.emailComments);

        dataHolder.setEmailFromAddress(this.emailFromAddress);

        dataHolder.setEditorTheme(this.editorTheme);

        dataHolder.setLocale(this.locale);

        dataHolder.setTimezone(this.timezone);

        dataHolder.setDefaultPlugins(this.defaultPlugins);

        dataHolder.setIsEnabled(this.isEnabled);

    }

    /**
     * Copy values from specified data object to this form bean.
     * Includes all types.
     */
    public void copyFrom(org.roller.pojos.WebsiteData dataHolder, Locale locale) throws RollerException
    {

        this.id = dataHolder.getId();

        this.name = dataHolder.getName();

        this.description = dataHolder.getDescription();

        this.defaultPageId = dataHolder.getDefaultPageId();

        this.weblogDayPageId = dataHolder.getWeblogDayPageId();

        this.enableBloggerApi = dataHolder.getEnableBloggerApi();

        this.editorPage = dataHolder.getEditorPage();

        this.ignoreWords = dataHolder.getIgnoreWords();

        this.allowComments = dataHolder.getAllowComments();

        this.emailComments = dataHolder.getEmailComments();

        this.emailFromAddress = dataHolder.getEmailFromAddress();

        this.editorTheme = dataHolder.getEditorTheme();

        this.locale = dataHolder.getLocale();

        this.timezone = dataHolder.getTimezone();

        this.defaultPlugins = dataHolder.getDefaultPlugins();

        this.isEnabled = dataHolder.getIsEnabled();

    }

    public void doReset(
    	org.apache.struts.action.ActionMapping mapping, 
    	javax.servlet.ServletRequest request)
    {

        this.id = null;

        this.name = null;

        this.description = null;

        this.defaultPageId = null;

        this.weblogDayPageId = null;

        this.enableBloggerApi = null;

        this.editorPage = null;

        this.ignoreWords = null;

        this.allowComments = null;

        this.emailComments = null;

        this.emailFromAddress = null;

        this.editorTheme = null;

        this.locale = null;

        this.timezone = null;

        this.defaultPlugins = null;

        this.isEnabled = null;

    }
    public void reset(
    	org.apache.struts.action.ActionMapping mapping, 
    	javax.servlet.ServletRequest request)
    {
        doReset(mapping, request);
    }
    public void reset(
    	org.apache.struts.action.ActionMapping mapping, 
    	javax.servlet.http.HttpServletRequest request)
    {
        doReset(mapping, request);
    }
}
