<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

  <display-name>Pebble</display-name>
  <description>My blog - powered by Pebble</description>

  <!-- set the value of this parameter to the name of the role that has admin access -->
  <context-param>
    <param-name>pebble.admin</param-name>
    <param-value>pebble-admin</param-value>
  </context-param>

  <!-- set the value of this parameter to the name of the role that has owner access -->
  <context-param>
    <param-name>blog.owner</param-name>
    <param-value>blog-owner</param-value>
  </context-param>

  <!-- set the value of this parameter to the name of the role that has contributor access -->
  <context-param>
    <param-name>blog.contributor</param-name>
    <param-value>blog-contributor</param-value>
  </context-param>

  <filter>
    <filter-name>ViewBlogFilter</filter-name>
    <filter-class>pebble.filter.ViewBlogFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>ViewBlogFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <listener>
    <listener-class>pebble.listener.PebbleContextListener</listener-class>
  </listener>

  <servlet>
    <servlet-name>BlogController</servlet-name>
    <servlet-class>pebble.controller.FrontController</servlet-class>

    <init-param>
      <param-name>actions</param-name>
      <param-value>action.properties</param-value>
    </init-param>

    <init-param>
      <param-name>actionExtension</param-name>
      <param-value>.action</param-value>
    </init-param>
  </servlet>

  <servlet>
    <servlet-name>SecureBlogController</servlet-name>
    <servlet-class>pebble.controller.FrontController</servlet-class>

    <init-param>
      <param-name>actions</param-name>
      <param-value>secure-action.properties</param-value>
    </init-param>

    <init-param>
      <param-name>actionExtension</param-name>
      <param-value>.secureaction</param-value>
    </init-param>
  </servlet>

  <servlet>
    <servlet-name>XmlRpcServlet</servlet-name>
    <servlet-class>pebble.controller.XmlRpcServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>index.jsp</servlet-name>
    <jsp-file>/index.jsp</jsp-file>
  </servlet>

  <servlet-mapping>
    <servlet-name>BlogController</servlet-name>
    <url-pattern>*.action</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>SecureBlogController</servlet-name>
    <url-pattern>*.secureaction</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>XmlRpcServlet</servlet-name>
    <url-pattern>/xmlrpc/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>index.jsp</servlet-name>
    <url-pattern>/index.html</url-pattern>
  </servlet-mapping>

  <session-config>
    <session-timeout>60</session-timeout>
  </session-config>

  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>

  <error-page>
    <error-code>401</error-code>
    <location>/401.action</location>
  </error-page>

  <error-page>
    <error-code>403</error-code>
    <location>/403.action</location>
  </error-page>

  <error-page>
    <error-code>404</error-code>
    <location>/404.action</location>
  </error-page>

  <error-page>
    <error-code>500</error-code>
    <location>/error.action</location>
  </error-page>

  <error-page>
    <exception-type>java.lang.Exception</exception-type>
    <location>/error.action</location>
  </error-page>

  <!-- uncomment this if you would like to use a JNDI-based JavaMail Session
  <resource-ref>
    <description>
      Resource reference to a factory for javax.mail.Session
      instances that may be used for sending e-mail notifications.
    </description>
    <res-ref-name>mail/Session</res-ref-name>
    <res-type>javax.mail.Session</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
  -->

  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Pebble Realm</web-resource-name>
      <url-pattern>*.secureaction</url-pattern>
      <http-method>GET</http-method>
      <http-method>HEAD</http-method>
      <http-method>POST</http-method>
    </web-resource-collection>
    <auth-constraint>
      <role-name>pebble-admin</role-name>
      <role-name>blog-owner</role-name>
      <role-name>blog-contributor</role-name>
      <role-name>privateblog-user</role-name>
    </auth-constraint>
  </security-constraint>

  <!--
    this is an example of how to setup a private blog
    (1) set the url-pattern to include the blog(s) you wish to make private
    (2) set the role-name (this can be anything)
    (3) configure users in your security realm (app server specific)
    (4) add the role to the auth-constraint section in the above security constraint
  -->
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Private Blog Realm</web-resource-name>
      <url-pattern>/privateblog/*</url-pattern>
      <http-method>GET</http-method>
      <http-method>HEAD</http-method>
      <http-method>POST</http-method>
    </web-resource-collection>
    <auth-constraint>
      <role-name>privateblog-user</role-name>
    </auth-constraint>
  </security-constraint>

  <!-- this collection of JSPs shouldn't be called directory -->
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>No direct access</web-resource-name>
      <url-pattern>/jsp/*</url-pattern>
      <url-pattern>/common/jsp/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
      <role-name>some-nonexistent-role</role-name>
    </auth-constraint>
  </security-constraint>

  <login-config>
    <auth-method>FORM</auth-method>
    <form-login-config>
      <form-login-page>/login.action</form-login-page>
      <form-error-page>/login.action?error=true</form-error-page>
    </form-login-config>
  </login-config>

  <security-role>
    <description>Blog owner</description>
    <role-name>blog-owner</role-name>
  </security-role>

  <security-role>
    <description>Blog contributor</description>
    <role-name>blog-contributor</role-name>
  </security-role>

</web-app>
