<?xml version="1.0" encoding="UTF-8"?>
<!--
  ** @author Matthias L. Jugel
  ** @version $Id: build.xml,v 1.160 2004/06/25 19:27:15 leo Exp $
  -->
<project basedir="." default="all" name="SnipSnap">

  <property file="conf/build.properties"/>
  <property file="conf/snipsnap.conf"/>

  <path id="server.classpath">
    <pathelement location="${jar}/javax.servlet.jar"/>
    <pathelement location="${jar}/org.apache.jasper.jar"/>
    <pathelement location="${jar}/org.apache.crimson.jar"/>
    <pathelement location="${jar}/org.mortbay.jetty.jar"/>
    <pathelement location="${jar}/mckoidb.jar"/>
    <pathelement location="${jar}/xmlrpc-1.2-b1.jar"/>
  </path>

  <path id="snipsnap.test">
    <pathelement location="${src}/apps/default/WEB-INF/lib/snipsnap-servlets.jar"/>
  </path>

  <!-- the overall class path -->
  <path id="app.classpath">
    <pathelement location="${jar}/asm-1.4.1.jar"/>
    <pathelement location="${jar}/groovy-1.0-rc1-snapshot.jar"/>
    <pathelement location="${jar}/graph-snipsnap.jar"/>
    <pathelement location="${jar}/radeox.jar"/>
    <pathelement location="${jar}/jena.jar"/>
    <pathelement location="${jar}/commons-logging.jar"/>
    <pathelement location="${jar}/commons-dbcp-1.1.jar"/>
    <pathelement location="${jar}/commons-pool-1.1.jar"/>
    <pathelement location="${jar}/commons-collections.jar"/>
    <pathelement location="${jar}/xmlrpc-1.2-b1.jar"/>
    <pathelement location="${jar}/lucene-1.2.jar"/>
    <pathelement location="${jar}/jython.jar"/>
    <pathelement location="${jar}/smack.jar"/>
    <pathelement location="${jar}/aspectjrt.jar"/>
    <pathelement location="${jar}/dom4j.jar"/>
    <pathelement location="${src}/apps/default/WEB-INF/lib/jstl.jar"/>
    <pathelement location="${src}/apps/default/WEB-INF/lib/standard.jar"/>
    <pathelement location="${jar}/activation.jar"/>
    <pathelement location="${jar}/mail.jar"/>
    <pathelement location="${jar}/cvslib.jar"/>
    <pathelement location="${jar}/j2h.jar"/>
    <pathelement location="${jar}/junit.jar"/>
    <pathelement location="${jar}/picocontainer-1.0.jar"/>
    <pathelement location="${jar}/nanocontainer-1.0.jar"/>
    <pathelement location="${jar}/nanning.jar"/>
  </path>

  <path id="all.classpath">
    <path refid="server.classpath"/>
    <path refid="app.classpath"/>
  </path>

  <!-- build distribution -->
  <target depends="tar-source, tar-binary" name="dist" description="tar complete distribution"/>

  <!-- build binary distribution package -->
  <target depends="clean" description="tar source package" name="tar-source">
    <tstamp/>
    <tar destfile="../${appname}-${snipsnap.server.version}-${DSTAMP}-src.tgz" compression="gzip">
      <tarfileset dir="." prefix="${appname}-${snipsnap.server.version}" mode="700">
        <include name="run.sh"/>
        <include name="run.bat"/>
        <include name="db.sh"/>
        <include name="dbexport.sh"/>
        <include name="dbimport.sh"/>
        <include name="dbrepair.sh"/>
        <include name="exportall.sh"/>
        <include name="devlinks.sh"/>
        <include name="renimg.sh"/>
      </tarfileset>
      <tarfileset dir="." prefix="${appname}-${snipsnap.server.version}">
        <include name="**"/>
        <exclude name="**/CVS"/>
        <exclude name="applications"/>
        <exclude name="run.sh"/>
        <exclude name="run.bat"/>
        <exclude name="db.sh"/>
        <exclude name="dbexport.sh"/>
        <exclude name="dbimport.sh"/>
        <exclude name="dbrepair.sh"/>
        <exclude name="exportall.sh"/>
        <exclude name="devlinks.sh"/>
        <exclude name="renimg.sh"/>
        <exclude name="src/theme/drrockit/"/>
        <exclude name="src/theme/javangelist/"/>
        <exclude name="src/theme/sib/"/>
      </tarfileset>
    </tar>
  </target>

  <target depends="all" description="tar binary package" name="tar-binary">
    <tstamp/>
    <tar destfile="../${appname}-${snipsnap.server.version}-${DSTAMP}.tgz" compression="gzip">
      <tarfileset dir="${basedir}" prefix="${appname}-${snipsnap.server.version}" mode="700">
        <include name="run.sh"/>
        <include name="run.bat"/>
      </tarfileset>
      <tarfileset dir="${basedir}" prefix="${appname}-${snipsnap.server.version}">
        <include name="lib/${appname}.jar"/>
        <include name="lib/${appname}.war"/>
        <include name="lib/${appname}-server.jar"/>
        <!--        <include name="lib/${appname}-theme-*.jar"/>-->
        <include name="lib/${appname}-installer.war"/>
        <include name="lib/${appname}-utils.jar"/>
        <include name="lib/org.apache.jasper.jar"/>
        <include name="lib/org.apache.crimson.jar"/>
        <include name="lib/org.mortbay.jetty.jar"/>
        <include name="lib/javax.servlet.jar"/>
        <include name="lib/xmlrpc-1.2-b1.jar"/>
        <include name="lib/mckoidb.jar"/>
        <include name="lib/dom4j.jar"/>
        <include name="lib/mysql-connector.jar"/>
        <include name="lib/postgres-jdbc.jar"/>
        <include name="conf/jetty.conf"/>
        <include name="license.txt"/>
        <include name="validate.xsl"/>
        <include name="README"/>
        <exclude name="**/CVS"/>
        <exclude name="run.sh"/>
        <exclude name="run.bat"/>
        <exclude name="db.sh"/>
        <exclude name="dbrepair.sh"/>
      </tarfileset>
    </tar>
  </target>

  <!-- delete compiled class files and created jar/war archives -->
  <target description="clean up compiled code" name="clean">
    <delete failonerror="false" includeEmptyDirs="true">
      <fileset dir="${target}" includes="**" excludes="CVS"/>
    </delete>
    <delete failonerror="false">
      <fileset dir="${jar}" includes="${appname}*.jar"/>
      <fileset dir="${jar}" includes="${appname}*.war"/>
      <fileset dir="${src}/apps/default/WEB-INF/lib" includes="${appname}-servlets.jar"/>
      <fileset dir="${src}/apps/installer/WEB-INF/lib" includes="installer-servlets.jar"/>
      <fileset dir="${src}/org/snipsnap/config" includes="Options.java"/>
    </delete>
  </target>

  <!-- create all archives -->
  <target depends="jar-server,jar-util,snipsnap-war" description="create all" name="all"/>


  <target name="buildtask">
    <mkdir dir="${target}/ant"/>
    <javac deprecation="false" debug="false"
      srcdir="${src}" destdir="${target}/ant">
      <include name="org/snipsnap/util/PropertyConstantBuilder.java"/>
    </javac>
  </target>

  <target depends="buildtask" name="declaretask">
    <taskdef name="constants"
      classname="org.snipsnap.util.PropertyConstantBuilder"
      classpath="${target}/ant"/>
  </target>

  <!-- prepare special generated classes -->
  <target depends="declaretask" name="generate">
    <constants
      properties="${src}/org/snipsnap/config/defaults.conf"
      file="${target}/ant/config.stub" prefix="app."
      />
    <loadfile property="config-stub" srcfile="${target}/ant/config.stub" failonerror="false"/>
    <copy file="${src}/org/snipsnap/config/Configuration.java.tmpl"
      tofile="${src}/org/snipsnap/config/Configuration.java" filtering="true" overwrite="true">
      <filterset>
        <filter token="DEFAULTS" value="${config-stub}"/>
      </filterset>
    </copy>

    <constants
      properties="${src}/org/snipsnap/config/globals.conf"
      file="${target}/ant/globals.stub" prefix="app."
      />
    <loadfile property="globals-stub" srcfile="${target}/ant/globals.stub" failonerror="false"/>
    <copy file="${src}/org/snipsnap/config/Globals.java.tmpl"
      tofile="${src}/org/snipsnap/config/Globals.java" filtering="true" overwrite="true">
      <filterset>
        <filter token="DEFAULTS" value="${globals-stub}"/>
      </filterset>
    </copy>
  </target>

  <!-- create server code -->
  <target depends="compile-jsp, compile-server,installer-war" description="create server jar" name="jar-server">
    <copy file="conf/copyright.txt" tofile="${target}/server/conf/copyright.txt" filtering="true">
      <filterset>
        <filter token="VERSION" value="${snipsnap.server.version}"/>
      </filterset>
    </copy>
    <jar destfile="${jar}/${appname}.jar" excludes="**/CVS" manifest="conf/launcher.manifest">
      <fileset dir="${target}/server" includes="org/snipsnap/server/*Launcher*"/>
    </jar>
    <jar destfile="${jar}/${appname}-server.jar" excludes="**/CVS, org/snipsnap/server/*Launcher*" manifest="conf/manifest">
      <fileset dir="${target}/server" includes="**">
        <exclude name="org/snipsnap/server/*Launcher*"/>
      </fileset>
      <fileset dir=".">
        <include name="conf/snipsnap.conf"/>
        <include name="conf/jetty.conf"/>
      </fileset>
      <fileset dir="${src}" includes="org/snipsnap/config/globals.conf"/>
      <fileset dir="${src}" includes="org/snipsnap/config/defaults.conf"/>
      <fileset dir="${src}" includes="org/snipsnap/config/transpose.map"/>
    </jar>
  </target>

  <target depends="generate" description="compile server code" name="compile-server">
    <mkdir dir="${target}/server"/>
    <javac deprecation="${deprecation}" debug="${debug}"
      srcdir="${src}"
      destdir="${target}/server"
      classpathref="server.classpath">

      <include name="org/snipsnap/server/**"/>
      <exclude name="org/snipsnap/server/Admin*"/>
    </javac>
  </target>

  <!-- create utility code -->
  <target depends="compile-util" description="build util jar" name="jar-util">
    <jar destfile="${jar}/${appname}-utils.jar" excludes="**/CVS" manifest="conf/utils.manifest">
      <fileset dir="${target}/util" includes="**"/>
      <fileset dir="." includes="conf/snipsnap.conf"/>
      <fileset dir="." includes="conf/copyright.txt"/>
      <fileset dir="${src}" includes="org/snipsnap/config/defaults.conf"/>
      <fileset dir="${src}" includes="org/snipsnap/config/transpose.map"/>
    </jar>
  </target>

  <target depends="generate" description="compile util code" name="compile-util">
    <mkdir dir="${target}/util"/>
    <javac deprecation="${deprecation}" debug="${debug}"
      srcdir="${src}"
      classpathref="all.classpath"
      destdir="${target}/util">
      <include name="org/snipsnap/util/Test*"/>
      <include name="org/snipsnap/util/*Util.java"/>
      <include name="org/snipsnap/util/DB*.java"/>
      <include name="org/snipsnap/util/*JDBC*.java"/>
      <include name="org/snipsnap/util/mail/**"/>
      <include name="org/snipsnap/util/*Test.java"/>
      <include name="org/snipsnap/server/AdminClient.java"/>
      <include name="org/snipsnap/util/XMLSnipRepair.java"/>
      <include name="org/snipsnap/util/LocaleComparator.java"/>
    </javac>
  </target>

  <target name="checkstyle">
    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>
    <pmd rulesetfiles="${check_rules}" shortFilenames="true" printToConsole="true">
      <!-- <pmd rulesetfiles="rulesets/coupling.xml,rulesets/unusedcode.xml,rulesets/basic.xml,rulesets/imports.xml" shortFilenames="true" printToConsole="true"> -->
      <formatter type="html" toFile="pmd_report.html"/>
      <fileset dir="./src">
        <include name="**/*.java"/>
      </fileset>
    </pmd>
  </target>

  <target depends="generate" description="compile test code" name="compile-test">
    <mkdir dir="${target}/test"/>
    <javac deprecation="${deprecation}" debug="${debug}"
      srcdir="${src}"
      classpathref="all.classpath"
      destdir="${target}/test"
      includes="org/snipsnap/test/**"/>
  </target>

  <target depends="generate" description="compile template application code" name="compile-servlets">
    <mkdir dir="${target}/default/WEB-INF/classes"/>
    <javac deprecation="${deprecation}" debug="${debug}"
      srcdir="${src}"
      classpathref="all.classpath"
      destdir="${target}/default/WEB-INF/classes"
      excludes="org/snipsnap/admin/**, org/snipsnap/server/**">
      <src path="${src}"/>
      <include name="org/snipsnap/**"/>
    </javac>
  </target>

  <target depends="compile-servlets" name="servlets-jar">
    <copy todir="${target}/default/WEB-INF/classes" filtering="true" overwrite="true">
      <filterset>
        <filter token="VERSION" value="${snipsnap.server.version}"/>
      </filterset>
      <fileset dir="${src}" includes="org/snipsnap/net/dispatcher.conf"/>
      <fileset dir="${src}" includes="org/snipsnap/config/globals.conf"/>
      <fileset dir="${src}" includes="org/snipsnap/config/defaults.conf"/>
      <fileset dir="${src}" includes="org/snipsnap/config/transpose.map"/>
      <fileset dir="${src}" includes="org/snipsnap/snip/storage/SnipSerializer.properties"/>
      <fileset dir="${src}" includes="org/snipsnap/net/handler/*.gsp"/>
    </copy>
    <jar destfile="${src}/apps/default/WEB-INF/lib/snipsnap-servlets.jar" excludes="**/CVS">
      <fileset dir="${target}/default/WEB-INF/classes" includes="**"/>
      <fileset dir="${src}" includes="META-INF/**"/>
    </jar>
  </target>

  <target if="precompile.jsp" depends="servlets-jar" name="compile-jsp" description="compile jsp files">
    <mkdir dir="${target}/jsp/source"/>
    <mkdir dir="${target}/jsp/classes"/>
    <jspc destdir="${target}/jsp/source"
      verbose="1" srcdir="${src}/apps/default"
      classpathref="all.classpath"
      webinc="${target}/jsp/web.inc">
      <include name="**/*.jsp"/>
      <webapp basedir="${src}/apps/default"/>
    </jspc>
    <depend
      srcdir="${target}/jsp/source"
      destdir="${target}/jsp/classes"
      cache="${target}/jsp/dependencies"
      classpathref="all.classpath"/>
    <javac deprecation="${deprecation}" debug="${debug}"
      srcdir="${target}/jsp/source"
      classpath="${src}/apps/default/WEB-INF/lib/snipsnap-servlets.jar"
      classpathref="all.classpath"
      destdir="${target}/jsp/classes">
      <include name="**"/>
    </javac>
  </target>

  <target name="make-edittest-jsp">
    <mkdir dir="${target}/jsp/source"/>
    <mkdir dir="${target}/jsp/classes"/>
    <jspc destdir="${target}/jsp/source"
      verbose="1" srcdir="${src}"
      package="org.snipsnap.jsp"
      classpathref="all.classpath">
      <include name="**/EditTest.jsp"/>
    </jspc>
    <depend
      srcdir="${target}/jsp/source"
      destdir="${target}/jsp/classes"
      cache="${target}/jsp/dependencies"
      classpathref="all.classpath"/>
    <javac deprecation="${deprecation}" debug="${debug}"
      srcdir="${target}/jsp/source"
      classpath="${src}/apps/default/WEB-INF/lib/snipsnap-servlets.jar"
      classpathref="all.classpath"
      destdir="${target}/jsp/classes">
      <include name="**"/>
    </javac>
    <jar destfile="${src}/apps/default/WEB-INF/lib/edittest.jar" excludes="**/CVS">
      <fileset dir="${target}/jsp/classes" includes="**"/>
      <!-- <fileset dir="${src}" includesfile="META-INF/services/javax.servlet.HttpServlet"/> -->
    </jar>
  </target>

  <target if="precompile.jsp" depends="compile-jsp" name="jsp-jar" description="package precompiled jsp files">
    <jar destfile="${src}/apps/default/WEB-INF/lib/snipsnap-jsp.jar" excludes="**/CVS">
      <fileset dir="${target}/jsp/classes" includes="**"/>
    </jar>
  </target>

  <!-- create web archive of the template application -->
  <target depends="jsp-jar" description="build template war" name="snipsnap-war">
    <mkdir dir="${target}/webapp"/>
    <copy todir="${target}/webapp">
      <fileset dir="${src}/apps/default">
        <exclude name="**/CVS"/>
        <exclude name="**/*.jsp" if="precompile.jsp"/>
        <exclude name="WEB-INF/web-xml.tmpl"/>
      </fileset>
    </copy>
    <copy tofile="${target}/webapp/WEB-INF/classes/i18n/messages.properties"
      file="${src}/apps/default/WEB-INF/classes/i18n/messages_en.properties"/>

    <loadfile property="web.inc" srcfile="${target}/jsp/web.inc" failonerror="false"/>
    <condition property="web.inc" value="">
      <not>
        <isset property="${web.inc}"/>
      </not>
    </condition>
    <!-- copy with filter if web.inc is available -->
    <copy
      tofile="${target}/webapp/WEB-INF/web.xml"
      file="${src}/apps/default/WEB-INF/web-xml.tmpl" overwrite="true">
      <filterset>
        <filter token="VERSION" value="${snipsnap.server.version}"/>
        <filter token="PRECOMPILED-JSP" value="${web.inc}"/>
      </filterset>
    </copy>

    <copy file="${src}/apps/default/index.jsp" tofile="${target}/webapp/index.jsp"/>

    <copy file="conf/copyright.txt" filtering="true"
      todir="${target}/webapp/WEB-INF/classes/defaults">
      <filterset>
        <filter token="VERSION" value="${snipsnap.server.version}"/>
      </filterset>
    </copy>

    <copy todir="${target}/webapp/WEB-INF/lib">
      <fileset dir="${jar}">
        <include name="asm-1.4.1.jar"/>
        <include name="asm-util-1.4.1.jar"/>
        <include name="groovy-1.0-rc1-snapshot.jar"/>
        <include name="graph-snipsnap.jar"/>
        <include name="radeox.jar"/>
        <include name="jena.jar"/>
        <include name="commons-logging.jar"/>
        <include name="commons-dbcp-1.1.jar"/>
        <include name="commons-pool-1.1.jar"/>
        <include name="commons-collections.jar"/>
        <include name="lucene-1.2.jar"/>
        <include name="xmlrpc-1.2-b1.jar"/>
        <include name="dom4j.jar"/>
        <include name="smack.jar"/>
        <include name="aspectjrt.jar"/>
        <include name="jython.jar"/>
        <include name="mail.jar"/>
        <include name="activation.jar"/>
        <include name="j2h.jar"/>
        <include name="picocontainer-1.0.jar"/>
        <include name="nanocontainer-1.0.jar"/>
        <include name="nanning.jar"/>
      </fileset>
    </copy>

    <jar destfile="${jar}/${appname}.war">
      <fileset dir="${target}/webapp" includes="**"/>
    </jar>
  </target>

  <target if="precompile.jsp" depends="installer-servlets-jar" name="compile-installer-jsp" description="compile installer jsp files">
    <mkdir dir="${target}/installer/jsp/source"/>
    <mkdir dir="${target}/installer/jsp/classes"/>
    <jspc destdir="${target}/installer/jsp/source"
      verbose="1"
      classpathref="all.classpath"
      webinc="${target}/installer/jsp/web.inc">
      <include name="**/*.jsp"/>
      <webapp basedir="${src}/apps/installer"/>
    </jspc>
    <depend
      srcdir="${target}/installer/jsp/source"
      destdir="${target}/installer/jsp/classes"
      cache="${target}/installer/jsp/dependencies"
      classpathref="all.classpath"/>
    <javac deprecation="${deprecation}" debug="${debug}"
      srcdir="${target}/installer/jsp/source"
      classpath="${target}/installer/webapp/WEB-INF/lib/installer-servlets.jar"
      classpathref="all.classpath"
      destdir="${target}/installer/jsp/classes">
      <include name="**"/>
    </javac>
  </target>

  <target description="compile installer application code" name="compile-installer">
    <mkdir dir="${target}/installer/servlets"/>
    <javac deprecation="${deprecation}" debug="${debug}"
      srcdir="${src}"
      classpathref="all.classpath"
      destdir="${target}/installer/servlets">
      <include name="org/snipsnap/admin/AdminInitFilter.java"/>
      <include name="org/snipsnap/admin/Installer.java"/>
    </javac>
  </target>

  <target if="precompile.jsp" depends="compile-installer-jsp" name="installer-jsp-jar" description="package precompiled installer jsp files">
    <mkdir dir="${target}/installer/webapp/WEB-INF/lib"/>
    <jar destfile="${target}/installer/webapp/WEB-INF/lib/installer-jsp.jar" excludes="**/CVS">
      <fileset dir="${target}/installer/jsp/classes" includes="**"/>
    </jar>
  </target>

  <target depends="compile-installer" description="package installer servlets" name="installer-servlets-jar">
    <mkdir dir="${target}/installer/webapp/WEB-INF/lib"/>
    <jar destfile="${target}/installer/webapp/WEB-INF/lib/installer-servlets.jar" excludes="**/CVS">
      <fileset dir="${target}/installer/servlets" includes="**"/>
      <fileset dir="." includes="conf/snipsnap.conf"/>
      <fileset dir="${src}" includes="org/snipsnap/config/defaults.conf"/>
      <fileset dir="${src}" includes="org/snipsnap/config/transpose.conf"/>
    </jar>
  </target>

  <!-- create web archive of the installer web application -->
  <target depends="installer-jsp-jar" description="build installer war" name="installer-war">
    <mkdir dir="${target}/installer/webapp"/>
    <copy todir="${target}/installer/webapp">
      <fileset dir="${src}/apps/installer">
        <exclude name="**/CVS"/>
        <exclude name="**/*.jsp" if="precompile.jsp"/>
        <exclude name="WEB-INF/web-xml.tmpl"/>
      </fileset>
      <fileset dir="${src}/apps/default">
        <include name="WEB-INF/lib/standard.jar"/>
        <include name="WEB-INF/lib/jstl.jar"/>
      </fileset>
    </copy>
    <copy file="${src}/apps/default/admin/css/config.css" tofile="${target}/installer/webapp/default.css"/>
    <copy file="${src}/apps/installer/index.jsp" tofile="${target}/installer/webapp/index.jsp"/>

    <!-- copy if installer-web.inc is available -->
    <loadfile property="installer-web.inc" srcfile="${target}/installer/jsp/web.inc" failonerror="false"/>
    <condition property="installer-web.inc" value="">
      <not>
        <isset property="${installer-web.inc}"/>
      </not>
    </condition>
    <copy
      tofile="${target}/installer/webapp/WEB-INF/web.xml"
      file="${src}/apps/installer/WEB-INF/web-xml.tmpl" overwrite="true">
      <filterset>
        <filter token="PRECOMPILED-JSP" value="${installer-web.inc}"/>
      </filterset>
    </copy>

    <jar destfile="${jar}/${appname}-installer.war">
      <fileset dir="${target}/installer/webapp" includes="**"/>
    </jar>
  </target>

  <target name="prepare-tests">
    <mkdir dir="${target}/test/org/snipsnap/config"/>
    <copy file="conf/snipsnap.conf" tofile="./cls/test/conf/snipsnap.conf"/>
    <copy file="src/org/snipsnap/config/defaults.conf" tofile="${target}/test/org/snipsnap/config/defaults.conf"/>
    <copy file="src/org/snipsnap/config/globals.conf" tofile="${target}/test/org/snipsnap/config/globals.conf"/>
    <copy file="src/org/snipsnap/config/transpose.map" tofile="${target}/test/org/snipsnap/config/transpose.map"/>
    <copy todir="${target}/test">
      <fileset dir="${src}/apps/default" includes="**.properties"/>
    </copy>

  </target>

  <target name="test" depends="snipsnap-war, jar-server, prepare-tests, compile-test">
    <junit printsummary="true">
      <formatter usefile="false" type="plain"/>
      <test name="org.snipsnap.test.AllTests"/>
      <classpath>
        <pathelement location="${target}/test"/>
        <pathelement location="${target}/webapp/WEB-INF/classes"/>
        <path refid="all.classpath"/>
        <path refid="snipsnap.test"/>
      </classpath>
    </junit>
  </target>

  <target name="test-complex" depends="snipsnap-war, jar-server, prepare-tests, compile-test">
    <junit printsummary="true">
      <formatter usefile="false" type="plain"/>
      <test name="org.snipsnap.test.AllComplexTests"/>
      <classpath>
        <pathelement location="${target}/test"/>
        <pathelement location="${target}"/>
        <path refid="all.classpath"/>
      </classpath>
    </junit>
  </target>

  <target description="generation javadocs" name="javadoc">
    <javadoc packagenames="org.snipsnap.*"
      sourcepath="src"
      excludepackagenames="org.snipsnap.test.*"
      defaultexcludes="yes"
      destdir="docs/api"
      author="true"
      version="true"
      use="true"
      windowtitle="SnipSnap API">
      <doctitle><![CDATA[<h1>SnipSnap</h1>]]></doctitle>
      <bottom><![CDATA[<i>Copyright &#169; 2001-2004 Matthias L. Jugel, Stephan J. Schmidt. All Rights Reserved
.</i>]]></bottom>
      <!-- <tag name="todo" scope="all" description="To do:" />
      <group title="Group 1 Packages" packages="com.dummy.test.a*"/>
      <group title="Group 2 Packages" packages="com.dummy.test.b*:com.dummy.test.c*"/>
      -->
      <link href="http://java.sun.com/j2se/1.4/docs/api/package-list"/>
      <link href="http://java.sun.com/j2ee/1.4/docs/api/package-list"/>
    </javadoc>
  </target>

</project>


